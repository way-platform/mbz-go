components:
  schemas:
    Command:
      properties:
        mandatory:
          description: Indicates if the command is mandatory for the generic service.
          type: boolean
        name:
          description: The name of the command.
          example: doors-unlock
          type: string
      required:
      - mandatory
      - name
      type: object
    Command_External:
      properties:
        mandatory:
          description: Indicates if the command is mandatory for the generic service.
          type: boolean
        name:
          description: The name of the command.
          example: doors-unlock
          type: string
      required:
      - mandatory
      - name
      type: object
    ErrorResponse:
      properties:
        detail:
          description: details why this error occurred.
          type: string
        instance:
          description: URI where this error occurred
          example: about:blank
          format: uri
          type: string
        statusCode:
          description: status code of this error (e.g. http status code)
          format: int32
          type: integer
        title:
          description: title of this error (e.g. http status reason phrase)
          type: string
        type:
          description: URI-reference for type information or 'about:blank' if no more
            information is available
          example: about:blank
          format: uri-reference
          type: string
      type: object
    ErrorResponse_External:
      properties:
        detail:
          description: details why this error occurred.
          type: string
        instance:
          description: URI where this error occurred
          example: about:blank
          format: uri
          type: string
        statusCode:
          description: status code of this error (e.g. http status code)
          format: int32
          type: integer
        title:
          description: title of this error (e.g. http status reason phrase)
          type: string
        type:
          description: URI-reference for type information or 'about:blank' if no more
            information is available
          example: about:blank
          format: uri-reference
          type: string
      type: object
    ErrorResponse_Internal:
      properties:
        detail:
          description: details why this error occurred.
          type: string
        instance:
          description: URI where this error occurred
          example: about:blank
          format: uri
          type: string
        statusCode:
          description: status code of this error (e.g. http status code)
          format: int32
          type: integer
        title:
          description: title of this error (e.g. http status reason phrase)
          type: string
        type:
          description: URI-reference for type information or 'about:blank' if no more
            information is available
          example: about:blank
          format: uri-reference
          type: string
      type: object
    GetAllServicesResponse:
      properties:
        services:
          description: The list of existing generic-services.
          items:
            $ref: '#/components/schemas/Service'
          type: array
      required:
      - services
      type: object
    GetAllServicesResponse_External:
      properties:
        services:
          description: The list of existing generic-services.
          items:
            $ref: '#/components/schemas/Service_External'
          type: array
      required:
      - services
      type: object
    GetAllServicesResponse_Internal:
      properties:
        services:
          description: The list of existing generic-services.
          items:
            $ref: '#/components/schemas/Service_Internal'
          type: array
      required:
      - services
      type: object
    GetAllServicesWithSignalsAndCommandsResponse:
      properties:
        services:
          description: The list of existing generic-services.
          items:
            $ref: '#/components/schemas/ServiceWithSignalsAndCommands'
          type: array
        version:
          description: The version of the services spec.
          type: string
      required:
      - services
      type: object
    GetAllServicesWithSignalsAndCommandsResponse_External:
      properties:
        services:
          description: The list of existing generic-services.
          items:
            $ref: '#/components/schemas/ServiceWithSignalsAndCommands_External'
          type: array
      required:
      - services
      type: object
    Service:
      properties:
        ciamScope:
          description: The required CIAM scope
          type: string
        consent:
          description: The required consent model
          enum:
          - fleet
          - vehicle_owner
          example: fleet
          type: string
        countryCode:
          default: GLOBAL
          description: The regional accessibility
          type: string
        id:
          description: The id of the generic-service
          example: '1001'
          type: string
        name:
          description: The name of the generic-service.
          example: Mileage
          type: string
        role:
          deprecated: true
          description: The required access role
          enum:
          - FLEET_CONSENT_STANDARD
          - FLEET_CONSENT_DOOR_LOCK_UNLOCK
          - FLEET_CONSENT_IMMOBILIZER
          - FLEET_CONSENT_DRIVER
          - BETA
          - FLEET_CONSENT_RESTRICTED_MARKET
          example: FLEET_CONSENT_STANDARD
          type: string
        roles:
          items:
            description: The list with required access roles
            enum:
            - FLEET_CONSENT_STANDARD
            - FLEET_CONSENT_DOOR_LOCK_UNLOCK
            - FLEET_CONSENT_IMMOBILIZER
            - FLEET_CONSENT_DRIVER
            - VEHICLE_OWNER_CONSENT_STANDARD
            - BETA
            - FLEET_CONSENT_RESTRICTED_MARKET
          type: array
      required:
      - ciamScope
      - consent
      - id
      - name
      - role
      - roles
      type: object
    ServiceWithSignalsAndCommands:
      properties:
        ciamScope:
          description: The required CIAM scope
          type: string
        commands:
          description: The list of commands the generic-service consists of.
          items:
            $ref: '#/components/schemas/Command'
          type: array
        consent:
          description: The required consent model
          enum:
          - fleet
          - vehicle_owner
          example: fleet
          type: string
        countryCode:
          default: GLOBAL
          description: The regional accessibility
          type: string
        id:
          description: The id of the generic-service
          example: '1001'
          type: string
        name:
          description: The name of the generic-service.
          example: Mileage
          type: string
        role:
          deprecated: true
          description: The required access role
          enum:
          - FLEET_CONSENT_STANDARD
          - FLEET_CONSENT_DOOR_LOCK_UNLOCK
          - FLEET_CONSENT_IMMOBILIZER
          - FLEET_CONSENT_DRIVER
          - FLEET_CONSENT_RESTRICTED_MARKET
          example: FLEET_CONSENT_STANDARD
          type: string
        roles:
          items:
            description: The list with required access roles
            enum:
            - FLEET_CONSENT_STANDARD
            - FLEET_CONSENT_DOOR_LOCK_UNLOCK
            - FLEET_CONSENT_IMMOBILIZER
            - FLEET_CONSENT_DRIVER
            - VEHICLE_OWNER_CONSENT_STANDARD
            - FLEET_CONSENT_RESTRICTED_MARKET
          type: array
        signals:
          description: The list of signals the generic-service consists of.
          items:
            $ref: '#/components/schemas/Signal'
          type: array
      required:
      - ciamScope
      - commands
      - consent
      - id
      - name
      - role
      - roles
      - signals
      type: object
    ServiceWithSignalsAndCommands_External:
      properties:
        ciamScope:
          description: The required CIAM scope
          type: string
        commands:
          description: The list of commands the generic-service consists of.
          items:
            $ref: '#/components/schemas/Command_External'
          type: array
        consent:
          description: The required consent model
          enum:
          - fleet
          - vehicle_owner
          example: fleet
          type: string
        countryCode:
          default: GLOBAL
          description: The regional accessibility
          type: string
        id:
          description: The id of the generic-service
          example: '1001'
          type: string
        name:
          description: The name of the generic-service.
          example: Mileage
          type: string
        roles:
          items:
            description: The list with required access roles
            enum:
            - FLEET_CONSENT_STANDARD
            - FLEET_CONSENT_DOOR_LOCK_UNLOCK
            - FLEET_CONSENT_IMMOBILIZER
            - FLEET_CONSENT_DRIVER
            - VEHICLE_OWNER_CONSENT_STANDARD
            - FLEET_CONSENT_RESTRICTED_MARKET
          type: array
        signals:
          description: The list of signals the generic-service consists of.
          items:
            $ref: '#/components/schemas/Signal_External'
          type: array
      required:
      - ciamScope
      - commands
      - consent
      - id
      - name
      - roles
      - signals
      type: object
    Service_External:
      properties:
        ciamScope:
          description: The required CIAM scope
          type: string
        consent:
          description: The required consent model
          enum:
          - fleet
          - vehicle_owner
          example: fleet
          type: string
        countryCode:
          default: GLOBAL
          description: The regional accessibility
          type: string
        id:
          description: The id of the generic-service
          example: '1001'
          type: string
        name:
          description: The name of the generic-service.
          example: Mileage
          type: string
        roles:
          items:
            description: The list with required access roles
            enum:
            - FLEET_CONSENT_STANDARD
            - FLEET_CONSENT_DOOR_LOCK_UNLOCK
            - FLEET_CONSENT_IMMOBILIZER
            - FLEET_CONSENT_DRIVER
            - VEHICLE_OWNER_CONSENT_STANDARD
            - BETA
            - FLEET_CONSENT_RESTRICTED_MARKET
          type: array
      required:
      - ciamScope
      - consent
      - id
      - name
      - roles
      type: object
    Service_Internal:
      properties:
        ciamScope:
          description: The required CIAM scope
          type: string
        consent:
          description: The required consent model
          enum:
          - fleet
          - vehicle_owner
          example: fleet
          type: string
        countryCode:
          default: GLOBAL
          description: The regional accessibility
          type: string
        id:
          description: The id of the generic-service
          example: '1001'
          type: string
        name:
          description: The name of the generic-service.
          example: Mileage
          type: string
        role:
          deprecated: true
          description: The required access role
          enum:
          - FLEET_CONSENT_STANDARD
          - FLEET_CONSENT_DOOR_LOCK_UNLOCK
          - FLEET_CONSENT_IMMOBILIZER
          - FLEET_CONSENT_DRIVER
          - BETA
          - FLEET_CONSENT_RESTRICTED_MARKET
          example: FLEET_CONSENT_STANDARD
          type: string
        roles:
          items:
            description: The list with required access roles
            enum:
            - FLEET_CONSENT_STANDARD
            - FLEET_CONSENT_DOOR_LOCK_UNLOCK
            - FLEET_CONSENT_IMMOBILIZER
            - FLEET_CONSENT_DRIVER
            - VEHICLE_OWNER_CONSENT_STANDARD
            - BETA
            - FLEET_CONSENT_RESTRICTED_MARKET
          type: array
      required:
      - ciamScope
      - consent
      - id
      - name
      - role
      - roles
      type: object
    Signal:
      properties:
        dataType:
          description: Describes the dataType of the signal.
          enum:
          - boolean
          - double
          - int
          - string
          - uint16
          - uint32
          - uint8
          type: string
        mandatory:
          description: Indicates if the signal is mandatory for the generic-service.
          type: boolean
        name:
          description: The name of the signal.
          example: Driving.Odometer.Lifetime
          type: string
        sendingBehaviour:
          description: A list that describes the sending behaviour(s) of the signal
            in the PUSH-API context.
          items:
            description: "Describes a sending behaviour of a signal in the PUSH-API\
              \ context:\n * *ON_CHANGE* - The signal is published as soon as its\
              \ value changes and the delivery is technically possible.\n * *ON_INTERVAL_120_SEC*\
              \ - The signal is published at regular intervals of 120 seconds, if\
              \ available.\n * *ON_INTERVAL_30_SEC* - The signal is published at regular\
              \ intervals of 30 seconds, if available.\n * *ON_INTERVAL_15_SEC* -\
              \ The signal is published at regular intervals of 15 seconds, if available.\n\
              \ * *ON_TRIP* - The signal is consumed (not published) during a trip\
              \ for the purpose of aggregation at the end.\n * *ON_TRIP_END* - The\
              \ signal is published when the end of a trip is detected for a vehicle\
              \ and all other trip-related signals have been received for said vehicle.\n\
              \ * *ON_CHARGING_SESSION* - The signal is consumed (not published) during\
              \ a charging session for the purpose of aggregation at the end.\n *\
              \ *ON_CHARGING_SESSION_END* - The signal is published when the end of\
              \ a charging session is detected for a vehicle and all other charging\
              \ session related signals have been received for said vehicle.\n * *ON_IGNITION_LOCK*\
              \ - The signal is published when the ignition lock is detected for a\
              \ vehicle.\n * *ON_REFUEL_SESSION* - The signal is consumed (not published)\
              \ during refueling of a vehicle with combustion engine for the purpose\
              \ of aggregation.\n * *ON_REFUELING_END* - The signal is published when\
              \ the refueling of a vehicle with combustion engine has finished.\n\
              \ * *ON_CHARGING_CYCLE* - The signal is consumed (not published) during\
              \ a charging cycle for the purpose of aggregation.\n * *ON_CHARGING_CYCLE_END*\
              \ - The signal is published when the end of a charging cycle is detected.\n\
              \ * *ON_RECHARGE_SESSION* - The signal is consumed (not published) during\
              \ the battery charging process of an electrical or hybrid vehicle.\n\
              \ * *ON_CHARGING_DETECTION* - The signal is published as soon as the\
              \ charging process of the battery of an electrical or hybrid vehicle\
              \ has been active for a set duration.\n * *ON_REFRESH* - The signal\
              \ is published as soon as its value or timestamp changes and the delivery\
              \ is technically possible."
            enum:
            - ON_CHANGE
            - ON_INTERVAL_30_SEC
            - ON_INTERVAL_15_SEC
            - ON_INTERVAL_120_SEC
            - ON_TRIP
            - ON_TRIP_END
            - ON_CHARGING_SESSION
            - ON_CHARGING_SESSION_END
            - ON_IGNITION_LOCK
            - ON_REFUEL_SESSION
            - ON_REFUELING_END
            - ON_CHARGING_CYCLE
            - ON_CHARGING_CYCLE_END
            - ON_RECHARGE_SESSION
            - ON_CHARGING_DETECTION
            - ON_REFRESH
            type: string
          type: array
        unit:
          description: Describes the unit of the signal.
          enum:
          - days
          - degree celsius
          - degrees
          - km
          - km/h
          - kPa
          - kW
          - kWh/100km
          - liter
          - l/100km
          - min
          - percent
          - seconds
          - V
          - milliseconds
          - kWh
          type: string
      required:
      - dataType
      - mandatory
      - name
      - sendingBehaviour
      type: object
    Signal_External:
      properties:
        dataType:
          description: Describes the dataType of the signal.
          enum:
          - boolean
          - double
          - int
          - string
          - uint16
          - uint32
          - uint8
          type: string
        mandatory:
          description: Indicates if the signal is mandatory for the generic-service.
          type: boolean
        name:
          description: The name of the signal.
          example: Driving.Odometer.Lifetime
          type: string
        sendingBehaviour:
          description: A list that describes the sending behaviour(s) of the signal
            in the PUSH-API context.
          items:
            description: "Describes a sending behaviour of a signal in the PUSH-API\
              \ context:\n * *ON_CHANGE* - The signal is published as soon as its\
              \ value changes and the delivery is technically possible.\n * *ON_INTERVAL_120_SEC*\
              \ - The signal is published at regular intervals of 120 seconds, if\
              \ available.\n * *ON_INTERVAL_30_SEC* - The signal is published at regular\
              \ intervals of 30 seconds, if available.\n * *ON_INTERVAL_15_SEC* -\
              \ The signal is published at regular intervals of 15 seconds, if available.\n\
              \ * *ON_TRIP* - The signal is consumed (not published) during a trip\
              \ for the purpose of aggregation at the end.\n * *ON_TRIP_END* - The\
              \ signal is published when the end of a trip is detected for a vehicle\
              \ and all other trip-related signals have been received for said vehicle.\n\
              \ * *ON_CHARGING_SESSION* - The signal is consumed (not published) during\
              \ a charging session for the purpose of aggregation at the end.\n *\
              \ *ON_CHARGING_SESSION_END* - The signal is published when the end of\
              \ a charging session is detected for a vehicle and all other charging\
              \ session related signals have been received for said vehicle.\n * *ON_IGNITION_LOCK*\
              \ - The signal is published when the ignition lock is detected for a\
              \ vehicle.\n * *ON_REFUEL_SESSION* - The signal is consumed (not published)\
              \ during refueling of a vehicle with combustion engine for the purpose\
              \ of aggregation.\n * *ON_REFUELING_END* - The signal is published when\
              \ the refueling of a vehicle with combustion engine has finished.\n\
              \ * *ON_CHARGING_CYCLE* - The signal is consumed (not published) during\
              \ a charging cycle for the purpose of aggregation.\n * *ON_CHARGING_CYCLE_END*\
              \ - The signal is published when the end of a charging cycle is detected.\n\
              \ * *ON_RECHARGE_SESSION* - The signal is consumed (not published) during\
              \ the battery charging process of an electrical or hybrid vehicle.\n\
              \ * *ON_CHARGING_DETECTION* - The signal is published as soon as the\
              \ charging process of the battery of an electrical or hybrid vehicle\
              \ has been active for a set duration.\n * *ON_REFRESH* - The signal\
              \ is published as soon as its value or timestamp changes and the delivery\
              \ is technically possible."
            enum:
            - ON_CHANGE
            - ON_INTERVAL_30_SEC
            - ON_INTERVAL_15_SEC
            - ON_INTERVAL_120_SEC
            - ON_TRIP
            - ON_TRIP_END
            - ON_CHARGING_SESSION
            - ON_CHARGING_SESSION_END
            - ON_IGNITION_LOCK
            - ON_REFUEL_SESSION
            - ON_REFUELING_END
            - ON_CHARGING_CYCLE
            - ON_CHARGING_CYCLE_END
            - ON_RECHARGE_SESSION
            - ON_CHARGING_DETECTION
            - ON_REFRESH
            type: string
          type: array
        unit:
          description: Describes the unit of the signal.
          enum:
          - days
          - degree celsius
          - degrees
          - km
          - km/h
          - kPa
          - kW
          - kWh/100km
          - liter
          - l/100km
          - min
          - percent
          - seconds
          - V
          - milliseconds
          - kWh
          type: string
      required:
      - dataType
      - mandatory
      - name
      - sendingBehaviour
      type: object
  securitySchemes:
    OAuth2:
      flows:
        clientCredentials:
          scopes:
            audience:server:client_id:95B37AC2-D501-4CFD-B853-7D299DD2D872: Audience
            groups: Groups
            openid: OpenID
            profile: Profile
          tokenUrl: https://ssoalpha.dvb.corpinter.net/v1/token
      type: oauth2
info:
  description: 'This is a Microservice which allows to retrieve the list of available
    services. It belongs to the Management API family.

    From a technical point of view, a service is used to activate or deactivate a
    data package for a vehicle. Certain services and data signals may not be available
    for all vehicles or all countries.


    Depending on the needed information, the services list can be requested with or
    without vehicle signal details, which are part of the respective service.

    '
  title: Services Catalog API
  version: v1
openapi: 3.1.0
paths:
  /v1/accounts/services:
    get:
      description: This endpoint returns a list of all services. The services are
        described by their service-ID and service-name.
      operationId: getAllServices_3
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllServicesResponse_External'
          description: '**Success**'
        '401':
          description: '**Unauthorized** Access-Token is missing or invalid. Your
            account information cannot be verified. Please try again and make sure
            your token has not expired and is suitable for this environment.'
        '403':
          description: '**Forbidden** The access to the resource is forbidden. Please
            ensure that the resource exists and you have the corresponding rights
            to access this resource.'
        '500':
          content:
            application/json:
              examples:
                Services not available.:
                  description: Services not available due to error fetching client
                    information.
                  value:
                    detail: Services not available due to error fetching client information.
                    instance: about:blank
                    status: 500
                    title: Services not available.
                    type: /services/not-available
                Services temporarily not available.:
                  description: Error during getting client specific services.
                  value:
                    detail: Error during getting client specific services.
                    instance: about:blank
                    status: 500
                    title: Services not available
                    type: /services/not-available
              schema:
                $ref: '#/components/schemas/ErrorResponse_External'
          description: "**Internal server error** \n\nThis error occurs due to problems\
            \ in the internal processing of your request."
      summary: Returns all services that exists
      tags:
      - Services API
  /v1/accounts/services/details:
    get:
      description: This endpoint returns a list of all generic-services including
        their corresponding signals and commands. The generic-services are described
        by their service-ID and service-name. Commands may not be available in all
        countries.
      operationId: getAllServiceDetails_3
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllServicesWithSignalsAndCommandsResponse_External'
          description: '**Success**'
        '401':
          description: '**Unauthorized** Access-Token is missing or invalid. Your
            account information cannot be verified. Please try again and make sure
            your token has not expired and is suitable for this environment.'
        '403':
          description: '**Forbidden** The access to the resource is forbidden. Please
            ensure that the resource exists and you have the corresponding rights
            to access this resource.'
        '500':
          content:
            application/json:
              examples:
                Services not available.:
                  description: Services not available due to error fetching client
                    information.
                  value:
                    detail: Services not available due to error fetching client information.
                    instance: about:blank
                    status: 500
                    title: Services not available.
                    type: /services/not-available
                Services temporarily not available.:
                  description: Error during getting client specific services.
                  value:
                    detail: Error during getting client specific services.
                    instance: about:blank
                    status: 500
                    title: Services not available
                    type: /services/not-available
              schema:
                $ref: '#/components/schemas/ErrorResponse_External'
          description: "**Internal server error** \n\nThis error occurs due to problems\
            \ in the internal processing of your request."
      summary: Returns all services that exist, including the signals
      tags:
      - Services API
  /v1/services:
    get:
      deprecated: true
      description: This endpoint returns a list of all services. The services are
        described by their service-ID and service-name.
      operationId: getAllServices_2
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllServicesResponse_Internal'
          description: '**Success**'
        '401':
          description: '**Unauthorized** Access-Token is missing or invalid. Your
            account information cannot be verified. Please try again and make sure
            your token has not expired and is suitable for this environment.'
        '403':
          description: '**Forbidden** The access to the resource is forbidden. Please
            ensure that the resource exists and you have the corresponding rights
            to access this resource.'
        '500':
          content:
            application/json:
              examples:
                Services not available.:
                  description: Services not available due to error fetching client
                    information.
                  value:
                    detail: Services not available due to error fetching client information.
                    instance: about:blank
                    status: 500
                    title: Services not available.
                    type: /services/not-available
                Services temporarily not available.:
                  description: Error during getting client specific services.
                  value:
                    detail: Error during getting client specific services.
                    instance: about:blank
                    status: 500
                    title: Services not available
                    type: /services/not-available
              schema:
                $ref: '#/components/schemas/ErrorResponse_Internal'
          description: "**Internal server error** \n\nThis error occurs due to problems\
            \ in the internal processing of your request."
      summary: Returns all services that exists
      tags:
      - Services API
      - Services API
  /v1/services/details:
    get:
      deprecated: true
      description: This endpoint returns a list of all generic-services including
        their corresponding signals and commands. The generic-services are described
        by their service-ID and service-name. Commands may not be available in all
        countries.
      operationId: getAllServiceDetails_2
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllServicesWithSignalsAndCommandsResponse'
          description: '**Success**'
        '401':
          description: '**Unauthorized** Access-Token is missing or invalid. Your
            account information cannot be verified. Please try again and make sure
            your token has not expired and is suitable for this environment.'
        '403':
          description: '**Forbidden** The access to the resource is forbidden. Please
            ensure that the resource exists and you have the corresponding rights
            to access this resource.'
        '500':
          content:
            application/json:
              examples:
                Services not available.:
                  description: Services not available due to error fetching client
                    information.
                  value:
                    detail: Services not available due to error fetching client information.
                    instance: about:blank
                    status: 500
                    title: Services not available.
                    type: /services/not-available
                Services temporarily not available.:
                  description: Error during getting client specific services.
                  value:
                    detail: Error during getting client specific services.
                    instance: about:blank
                    status: 500
                    title: Services not available
                    type: /services/not-available
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "**Internal server error** \n\nThis error occurs due to problems\
            \ in the internal processing of your request."
      summary: Returns all services that exist, including the signals
      tags:
      - Services API
      - Services API
  /v2/accounts/services:
    get:
      description: This endpoint returns a list of all services. The services are
        described by their service-ID and service-name.
      operationId: getAllServices_1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllServicesResponse_External'
          description: '**Success**'
        '401':
          description: '**Unauthorized** Access-Token is missing or invalid. Your
            account information cannot be verified. Please try again and make sure
            your token has not expired and is suitable for this environment.'
        '403':
          description: '**Forbidden** The access to the resource is forbidden. Please
            ensure that the resource exists and you have the corresponding rights
            to access this resource.'
        '500':
          content:
            application/json:
              examples:
                Services not available.:
                  description: Services not available due to error fetching client
                    information.
                  value:
                    detail: Services not available due to error fetching client information.
                    instance: about:blank
                    status: 500
                    title: Services not available.
                    type: /services/not-available
                Services temporarily not available.:
                  description: Error during getting client specific services.
                  value:
                    detail: Error during getting client specific services.
                    instance: about:blank
                    status: 500
                    title: Services not available
                    type: /services/not-available
              schema:
                $ref: '#/components/schemas/ErrorResponse_External'
          description: "**Internal server error** \n\nThis error occurs due to problems\
            \ in the internal processing of your request."
      summary: Returns all services that exists
      tags:
      - Services API
  /v2/accounts/services/details:
    get:
      description: This endpoint returns a list of all generic-services including
        their corresponding signals and commands. The generic-services are described
        by their service-ID and service-name. Commands may not be available in all
        countries.
      operationId: getAllServiceDetails_1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllServicesWithSignalsAndCommandsResponse_External'
          description: '**Success**'
        '401':
          description: '**Unauthorized** Access-Token is missing or invalid. Your
            account information cannot be verified. Please try again and make sure
            your token has not expired and is suitable for this environment.'
        '403':
          description: '**Forbidden** The access to the resource is forbidden. Please
            ensure that the resource exists and you have the corresponding rights
            to access this resource.'
        '500':
          content:
            application/json:
              examples:
                Services not available.:
                  description: Services not available due to error fetching client
                    information.
                  value:
                    detail: Services not available due to error fetching client information.
                    instance: about:blank
                    status: 500
                    title: Services not available.
                    type: /services/not-available
                Services temporarily not available.:
                  description: Error during getting client specific services.
                  value:
                    detail: Error during getting client specific services.
                    instance: about:blank
                    status: 500
                    title: Services not available
                    type: /services/not-available
              schema:
                $ref: '#/components/schemas/ErrorResponse_External'
          description: "**Internal server error** \n\nThis error occurs due to problems\
            \ in the internal processing of your request."
      summary: Returns all services that exist, including the signals
      tags:
      - Services API
security:
- OAuth2:
  - openid
  - groups
  - profile
  - audience:server:client_id:95B37AC2-D501-4CFD-B853-7D299DD2D872
servers:
- description: Generated server url
  url: https://service.connect-business.net/api
tags:
- description: API to get all available services and their details.
  name: Services API
